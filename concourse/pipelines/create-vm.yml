resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: "latest"

resources:
- name: terraform
  type: terraform
  source:
    env_name: test
    backend_type: s3
    backend_config:
      bucket: ((tf_state_bucket))
      key: ((tf_state_key))
      region: us-east-1
      #access_key: storage_access_key
      #secret_key: storage_secret_key 
    vars:
      tag_name: concourse
      pm_api_url: {{pm_api_url}}
      pm_user: {{pm_user}}
      pm_password: {{pm_password}}
      container_pass: {{container_pass}}
      target_node: {{target_node}}
      ostemplate: {{ostemplate}}
      tags: {{tags}}
      nameserver: {{nameserver}}
      hostname: {{hostname}}
    env:
      AWS_ACCESS_KEY_ID: {{environment_access_key}}
      AWS_SECRET_ACCESS_KEY: {{environment_secret_key}}

- name: repo
  type: git
  source:
    uri: https://github.com/chad2448/terraform.git
    branch: main

  
jobs:

- name: check-terra
  plan:
  - get: repo
    trigger: false
  - task: check-terra-task
    config:
      platform: linux
      image_resource:
        type: registry-image
        source: 
          repository: alpine
      inputs:
      - name: repo
      run:
        path: sh 
        args:
        - -cx
        - |
          cd repo
          cat aws/main.tf

- name: update-infrastructure
  plan:
  - get: repo
  - put: terraform
    params:
      env_name: test
      terraform_source: repo/terraform/aws
  - task: show-outputs
    config:
      platform: linux
      image_resource:
        type: registry-image
        source: 
          repository: alpine
      inputs:
      - name: terraform
      run:
        path: /bin/sh
        args:
        - -c
        - |
          echo "name: $(cat terraform/name)"
          echo "metadata: $(cat terraform/metadata)"

- name: terraform-plan
  plan:
  - get: repo
  - put: terraform
    params:
      terraform_source: repo/terraform/proxmox
      plan_only: true

- name: terraform-apply
  plan:
  - get: repo
    trigger: false
    passed: [terraform-plan]
  - get: terraform
    trigger: false
    passed: [terraform-plan]
  - put: terraform
    params:
      terraform_source: repo/terraform/proxmox
      plan_run: false